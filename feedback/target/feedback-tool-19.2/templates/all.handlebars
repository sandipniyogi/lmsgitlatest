(function () {
// Source: /Users/sandipniyogi/Documents/jiri/sakai/sakai/feedback/src/webapp/WEB-INF/templates/content.handlebars

  var template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n    <div class=\"feedback-form-field\">\n    	<label for=\"feedback-siteupdaters\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "siteupdater_instruction", options) : helperMissing.call(depth0, "translate", "siteupdater_instruction", options)))
    + "</label>\n    	<select id=\"feedback-siteupdaters\" name=\"alternativerecipient\">\n            ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.siteUpdaters), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </select>\n    </div>\n    ";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                <option value=\"";
  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (helper = helpers.displayName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.displayName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n            ";
  return buffer;
  }

  buffer += "<h2 id=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title", options) : helperMissing.call(depth0, "translate", "title", options)))
    + "</h2>\n<div id=\"feedback-overview\" class=\"instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_instruction", options) : helperMissing.call(depth0, "translate", "content_instruction", options)))
    + "</div>\n<form id=\"feedback-form\" action=\"/direct/feedback/";
  if (helper = helpers.siteId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.siteId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/reportcontent\" method=\"POST\">\n    <div id=\"feedback-mandatory-instruction\" class=\"instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "mandatory_instruction", options) : helperMissing.call(depth0, "translate", "mandatory_instruction", options)))
    + "</div>\n    <fieldset>\n	";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.loggedIn), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    <div class=\"feedback-form-field\">\n    	<label for=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title_label", options) : helperMissing.call(depth0, "translate", "title_label", options)))
    + "</label>\n    	<input id=\"feedback-title\" type=\"text\" name=\"title\" maxlength=\"40\" size=\"40\"/>\n    </div>\n    <div class=\"feedback-form-field\">\n    	<label for=\"feedback-description\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "description_label", options) : helperMissing.call(depth0, "translate", "description_label", options)))
    + "</label>\n    	<textarea id=\"feedback-description\" name=\"description\" cols=\"80\" rows=\"5\"></textarea>\n    </div>\n    <div id=\"feedback-sender-address-wrapper\" class=\"feedback-form-field\">\n    	<label for=\"feedback-sender-address\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "sender_address_label", options) : helperMissing.call(depth0, "translate", "sender_address_label", options)))
    + "</label>\n    	<input id=\"feedback-sender-address\" type=\"text\" name=\"senderaddress\" size=\"40\"/>\n    </div>\n    \n    <input id=\"feedback-destination-email\" value=\"";
  if (helper = helpers.destinationAddress) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.destinationAddress); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" hidden=\"hidden\"/>\n    <input name=\"plugins\" value=\"";
  if (helper = helpers.plugins) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.plugins); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"screenWidth\" value=\"";
  if (helper = helpers.screenWidth) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.screenWidth); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"screenHeight\" value=\"";
  if (helper = helpers.screenHeight) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.screenHeight); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"oscpu\" value=\"";
  if (helper = helpers.oscpu) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.oscpu); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"windowWidth\" value=\"";
  if (helper = helpers.windowWidth) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.windowWidth); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"windowHeight\" value=\"";
  if (helper = helpers.windowHeight) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.windowHeight); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input id=\"feedback-contactname\" value=\"";
  if (helper = helpers.contactName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.contactName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" hidden=\"hidden\"/>\n    <input type=\"hidden\" name=\"siteExists\" value=\"";
  if (helper = helpers.siteExists) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.siteExists); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"/>\n    <div id=\"feedback-attachments-label\">\n        <span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_label", options) : helperMissing.call(depth0, "translate", "attachments_label", options)))
    + "</span>\n        <span id=\"feedback-max-attachments-label\">\n            <span id=\"feedback-max-attachments-mb\"></span>\n            <span id=\"feedback-attachments-max-suffix\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_max_suffix", options) : helperMissing.call(depth0, "translate", "attachments_max_suffix", options)))
    + "</span>\n        </span>\n    </div>\n    <input id=\"feedback-attachment\" name=\"attachment\" title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_select_attachment", options) : helperMissing.call(depth0, "translate", "attachments_select_attachment", options)))
    + "\" type=\"file\" class=\"multi\"/><br clear=\"all\"/>\n    <div id=\"feedback-recaptcha-wrapper\">\n        <div>Enter the text that you see in the box below:</div>\n        <div id=\"feedback-recaptcha-block\"></div>\n    </div>\n    </fieldset>\n    <div class=\"act\">\n        <input id=\"feedback-submit-button\" class=\"active\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "submit_label", options) : helperMissing.call(depth0, "translate", "submit_label", options)))
    + "\" />\n        <input id=\"feedback-cancel-button\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "cancel_label", options) : helperMissing.call(depth0, "translate", "cancel_label", options)))
    + "\" />\n    </div>\n</form>\n";
  return buffer;
  });
  var templates = Handlebars.templates = Handlebars.templates || {};
  templates['content'] = template;
  var partials = Handlebars.partials = Handlebars.partials || {};
  partials['content'] = template;


// Source: /Users/sandipniyogi/Documents/jiri/sakai/sakai/feedback/src/webapp/WEB-INF/templates/emailForm.handlebars

  var template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<h2 id=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title", options) : helperMissing.call(depth0, "translate", "title", options)))
    + "</h2>\n<div id=\"feedback-overview\" class=\"instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{
    'instructionUrl': ((depth0 && depth0.instructionUrl))
  },data:data},helper ? helper.call(depth0, (depth0 && depth0.instructionKey), options) : helperMissing.call(depth0, "translate", (depth0 && depth0.instructionKey), options)))
    + "</div>\n<form id=\"feedback-form\" action=\"/direct/feedback/";
  if (helper = helpers.siteId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.siteId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/";
  if (helper = helpers.url) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.url); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" method=\"POST\">\n    <div id=\"feedback-mandatory-instruction\" class=\"instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "mandatory_instruction", options) : helperMissing.call(depth0, "translate", "mandatory_instruction", options)))
    + "</div>\n    <fieldset>\n    <div class=\"feedback-form-field\">\n    	<label for=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title_label", options) : helperMissing.call(depth0, "translate", "title_label", options)))
    + "</label>\n    	<input id=\"feedback-title\" type=\"text\" name=\"title\" maxlength=\"40\" size=\"40\"/>\n    </div>\n    <div class=\"feedback-form-field\">\n    	<label for=\"feedback-description\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "description_label", options) : helperMissing.call(depth0, "translate", "description_label", options)))
    + "</label>\n    	<textarea id=\"feedback-description\" name=\"description\" cols=\"80\" rows=\"5\"></textarea>\n    </div>\n    <div id=\"feedback-sender-address-wrapper\" class=\"feedback-form-field\">\n    	<label for=\"feedback-sender-address\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "sender_address_label", options) : helperMissing.call(depth0, "translate", "sender_address_label", options)))
    + "</label>\n    	<input id=\"feedback-sender-address\" type=\"text\" name=\"senderaddress\" size=\"40\"/>\n    </div>\n    \n    <input id=\"feedback-destination-email\" value=\"";
  if (helper = helpers.destinationAddress) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.destinationAddress); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" hidden=\"hidden\"/>\n    <input id=\"feedback-contactname\" value=\"";
  if (helper = helpers.contactName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.contactName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" hidden=\"hidden\"/>\n    <input type=\"hidden\" name=\"siteExists\" value=\"";
  if (helper = helpers.siteExists) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.siteExists); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"/>\n    <input name=\"plugins\" value=\"";
  if (helper = helpers.plugins) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.plugins); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"screenWidth\" value=\"";
  if (helper = helpers.screenWidth) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.screenWidth); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"screenHeight\" value=\"";
  if (helper = helpers.screenHeight) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.screenHeight); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"oscpu\" value=\"";
  if (helper = helpers.oscpu) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.oscpu); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"windowWidth\" value=\"";
  if (helper = helpers.windowWidth) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.windowWidth); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <input name=\"windowHeight\" value=\"";
  if (helper = helpers.windowHeight) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.windowHeight); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" type=\"hidden\"/>\n    <div id=\"feedback-attachments-label\">\n        <span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_label", options) : helperMissing.call(depth0, "translate", "attachments_label", options)))
    + "</span>\n        <span id=\"feedback-max-attachments-label\">\n            <span id=\"feedback-max-attachments-mb\"></span>\n            <span id=\"feedback-attachments-max-suffix\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_max_suffix", options) : helperMissing.call(depth0, "translate", "attachments_max_suffix", options)))
    + "</span>\n        </span>\n    </div>\n    <input id=\"feedback-attachment\" name=\"attachment\" title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_select_attachment", options) : helperMissing.call(depth0, "translate", "attachments_select_attachment", options)))
    + "\" type=\"file\" class=\"multi\"/><br clear=\"all\"/>\n    <div id=\"feedback-recaptcha-wrapper\">\n        <div>Enter the text that you see in the box below:</div>\n        <div id=\"feedback-recaptcha-block\"></div>\n    </div>\n    </fieldset>\n    <div class=\"act\">\n        <input id=\"feedback-submit-button\" class=\"active\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "submit_label", options) : helperMissing.call(depth0, "translate", "submit_label", options)))
    + "\" />\n        <input id=\"feedback-cancel-button\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "cancel_label", options) : helperMissing.call(depth0, "translate", "cancel_label", options)))
    + "\" />\n    </div>\n</form>\n";
  return buffer;
  });
  var templates = Handlebars.templates = Handlebars.templates || {};
  templates['emailForm'] = template;
  var partials = Handlebars.partials = Handlebars.partials || {};
  partials['emailForm'] = template;


// Source: /Users/sandipniyogi/Documents/jiri/sakai/sakai/feedback/src/webapp/WEB-INF/templates/home.handlebars

  var template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType="function";

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.enableTechnical), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n        <div id=\"feedback-technical-setup-instruction\" class=\"information\">\n            "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_setup_instruction", options) : helperMissing.call(depth0, "translate", "technical_setup_instruction", options)))
    + "\n        </div>\n    ";
  return buffer;
  }

function program4(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.enableHelp), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  }
function program5(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n        <div id=\"feedback-helpdesk-setup-instruction\" class=\"information\">\n            "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "ask_setup_instruction", options) : helperMissing.call(depth0, "translate", "ask_setup_instruction", options)))
    + "\n        </div>\n    ";
  return buffer;
  }

function program7(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.enableSuggestions), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  }
function program8(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n        <div id=\"feedback-suggestion-setup-instruction\" class=\"information\">\n            "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "feature_suggestion_setup_instruction", options) : helperMissing.call(depth0, "translate", "feature_suggestion_setup_instruction", options)))
    + "\n        </div>\n    ";
  return buffer;
  }

function program10(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n        <div class=\"feedback-box\" id=\"feedback-content-problem\">\n            <div class=\"feedback-box-header\">\n                <span class=\"fa fa-fw "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_icon_no_translate", options) : helperMissing.call(depth0, "translate", "content_icon_no_translate", options)))
    + "\" aria-hidden=\"true\"></span>\n                <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_title", options) : helperMissing.call(depth0, "translate", "content_title", options)))
    + "</h3>\n            </div>\n            <ul class=\"list\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_explanation", options) : helperMissing.call(depth0, "translate", "content_explanation", options)))
    + "</ul>\n            <div class=\"feedback-box-bottom\">\n                <p class=\"feedback-box-bottom-link\"><a id=\"feedback-report-content-link\" href=\"javascript:;\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_link", options) : helperMissing.call(depth0, "translate", "content_link", options)))
    + "</a></p>\n            </div>\n            <div class=\"clear\"></div>\n        </div>\n    ";
  return buffer;
  }

function program12(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n        <div class=\"feedback-box\" id=\"feedback-ask-help\">\n            <div class=\"feedback-box-header\">\n                <span class=\"fa fa-fw "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "ask_icon_no_translate", options) : helperMissing.call(depth0, "translate", "ask_icon_no_translate", options)))
    + "\" aria-hidden=\"true\"></span>\n                <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "ask_title", options) : helperMissing.call(depth0, "translate", "ask_title", options)))
    + "</h3>\n            </div>\n            <ul class=\"list\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "ask_explanation", options) : helperMissing.call(depth0, "translate", "ask_explanation", options)))
    + "</ul>\n            <div class=\"feedback-box-bottom\">\n                ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.enableHelp), {hash:{},inverse:self.program(18, program18, data),fn:self.program(13, program13, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            </div>\n            <div class=\"clear\"></div>\n        </div>\n    ";
  return buffer;
  }
function program13(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n                    <p class=\"feedback-box-bottom-link\"><a id=\"feedback-report-helpdesk-link\"\n                    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.helpPanelAsLink), {hash:{},inverse:self.program(16, program16, data),fn:self.program(14, program14, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                    >"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "ask_link", options) : helperMissing.call(depth0, "translate", "ask_link", options)))
    + "</a></p>\n                ";
  return buffer;
  }
function program14(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                        href=\"";
  if (helper = helpers.helpdeskUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpdeskUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\"\n                    ";
  return buffer;
  }

function program16(depth0,data) {
  
  
  return "\n                        href=\"javascript:;\"\n                    ";
  }

function program18(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n                    <p class='information'>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "no_help_address", options) : helperMissing.call(depth0, "translate", "no_help_address", options)))
    + "</p>\n                ";
  return buffer;
  }

function program20(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n        <div class=\"feedback-box\" id=\"feedback-tech-problem\">\n            <div class=\"feedback-box-header\">\n                <span class=\"fa fa-fw "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_icon_no_translate", options) : helperMissing.call(depth0, "translate", "technical_icon_no_translate", options)))
    + "\" aria-hidden=\"true\"></span>\n                <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_title", options) : helperMissing.call(depth0, "translate", "technical_title", options)))
    + "</h3>\n            </div>\n            <ul class=\"list\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_explanation", options) : helperMissing.call(depth0, "translate", "technical_explanation", options)))
    + "</ul>\n            <div class=\"feedback-box-bottom\">\n                ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.enableTechnical), {hash:{},inverse:self.program(24, program24, data),fn:self.program(21, program21, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            </div>\n            <div class=\"clear\"></div>\n        </div>\n    ";
  return buffer;
  }
function program21(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n                    <p class=\"feedback-box-bottom-link\"><a id=\"feedback-report-technical-link\"\n                    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.technicalPanelAsLink), {hash:{},inverse:self.program(16, program16, data),fn:self.program(22, program22, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                    >"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_link", options) : helperMissing.call(depth0, "translate", "technical_link", options)))
    + "</a></p>\n                ";
  return buffer;
  }
function program22(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                        href=\"";
  if (helper = helpers.technicalUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.technicalUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\"\n                    ";
  return buffer;
  }

function program24(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n                    <p class='information'>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "no_technical_address", options) : helperMissing.call(depth0, "translate", "no_technical_address", options)))
    + "</p>\n                ";
  return buffer;
  }

function program26(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n        <div class=\"feedback-box\" id=\"feedback-improvement\">\n            <div class=\"feedback-box-header\">\n                <span class=\"fa fa-fw "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_icon_no_translate", options) : helperMissing.call(depth0, "translate", "suggest_icon_no_translate", options)))
    + "\" aria-hidden=\"true\"></span>\n                <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_title", options) : helperMissing.call(depth0, "translate", "suggest_title", options)))
    + "</h3>\n            </div>\n            <ul class=\"list\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_explanation", options) : helperMissing.call(depth0, "translate", "suggest_explanation", options)))
    + "</ul>\n            <div class=\"feedback-box-bottom\">\n                ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.enableSuggestions), {hash:{},inverse:self.program(32, program32, data),fn:self.program(27, program27, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            </div>\n            <div class=\"clear\"></div>\n        </div>\n    ";
  return buffer;
  }
function program27(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n                    <p class=\"feedback-box-bottom-link\"><a id=\"feedback-suggest-feature-link\"\n                    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.suggestionsPanelAsLink), {hash:{},inverse:self.program(30, program30, data),fn:self.program(28, program28, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                    >"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_link", options) : helperMissing.call(depth0, "translate", "suggest_link", options)))
    + "</a></p>\n                ";
  return buffer;
  }
function program28(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                          href=\"";
  if (helper = helpers.featureSuggestionUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.featureSuggestionUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\"\n                    ";
  return buffer;
  }

function program30(depth0,data) {
  
  
  return "\n                          href=\"javascript:;\"\n                    ";
  }

function program32(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n                    <p class='information'>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "no_suggestion_url", options) : helperMissing.call(depth0, "translate", "no_suggestion_url", options)))
    + "</p>\n                ";
  return buffer;
  }

function program34(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n        <div class=\"feedback-box\" id=\"feedback-supplemental-a\">\n            <div class=\"feedback-box-header\">\n                <span class=\"fa fa-fw "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "supplemental_a_icon_no_translate", options) : helperMissing.call(depth0, "translate", "supplemental_a_icon_no_translate", options)))
    + "\" aria-hidden=\"true\"></span>\n                <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "supplemental_a_title", options) : helperMissing.call(depth0, "translate", "supplemental_a_title", options)))
    + "</h3>\n            </div>\n            <ul class=\"list\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "supplemental_a_explanation", options) : helperMissing.call(depth0, "translate", "supplemental_a_explanation", options)))
    + "</ul>\n            <div class=\"feedback-box-bottom\">\n                ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.enableSupplementalA), {hash:{},inverse:self.program(40, program40, data),fn:self.program(35, program35, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            </div>\n            <div class=\"clear\"></div>\n        </div>\n    ";
  return buffer;
  }
function program35(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n                    <p class=\"feedback-box-bottom-link\"><a id=\"feedback-report-supplemental-a-link\"\n                        ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.supplementalAPanelAsLink), {hash:{},inverse:self.program(38, program38, data),fn:self.program(36, program36, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                    >"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "supplemental_a_link", options) : helperMissing.call(depth0, "translate", "supplemental_a_link", options)))
    + "</a></p>\n                ";
  return buffer;
  }
function program36(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                          href=\"";
  if (helper = helpers.supplementalAUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.supplementalAUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\"\n                        ";
  return buffer;
  }

function program38(depth0,data) {
  
  
  return "\n                          href=\"javascript:;\"\n                        ";
  }

function program40(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n                    <p class='information'>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "no_supplemental_a", options) : helperMissing.call(depth0, "translate", "no_supplemental_a", options)))
    + "</p>\n                ";
  return buffer;
  }

function program42(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n        <div class=\"feedback-box\" id=\"feedback-supplemental-b\">\n            <div class=\"feedback-box-header\">\n                <span class=\"fa fa-fw "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "supplemental_b_icon_no_translate", options) : helperMissing.call(depth0, "translate", "supplemental_b_icon_no_translate", options)))
    + "\" aria-hidden=\"true\"></span>\n                <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "supplemental_b_title", options) : helperMissing.call(depth0, "translate", "supplemental_b_title", options)))
    + "</h3>\n            </div>\n            <ul class=\"list\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "supplemental_b_explanation", options) : helperMissing.call(depth0, "translate", "supplemental_b_explanation", options)))
    + "</ul>\n            <div class=\"feedback-box-bottom\">\n                ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.enableSupplementalB), {hash:{},inverse:self.program(46, program46, data),fn:self.program(43, program43, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            </div>\n            <div class=\"clear\"></div>\n        </div>\n    ";
  return buffer;
  }
function program43(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\n                    <p class=\"feedback-box-bottom-link\"><a id=\"feedback-report-supplemental-b-link\"\n                        ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.supplementalBPanelAsLink), {hash:{},inverse:self.program(38, program38, data),fn:self.program(44, program44, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                    >"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "supplemental_b_link", options) : helperMissing.call(depth0, "translate", "supplemental_b_link", options)))
    + "</a></p>\n                ";
  return buffer;
  }
function program44(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                          href=\"";
  if (helper = helpers.supplementalBUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.supplementalBUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\"\n                        ";
  return buffer;
  }

function program46(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n                    <p class='information'>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "no_supplemental_b", options) : helperMissing.call(depth0, "translate", "no_supplemental_b", options)))
    + "</p>\n                ";
  return buffer;
  }

function program48(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n        ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showHelpPanel), {hash:{},inverse:self.noop,fn:self.program(49, program49, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    ";
  return buffer;
  }
function program49(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n            ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showTechnicalPanel), {hash:{},inverse:self.noop,fn:self.program(50, program50, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        ";
  return buffer;
  }
function program50(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n                ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showSuggestionsPanel), {hash:{},inverse:self.noop,fn:self.program(51, program51, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            ";
  return buffer;
  }
function program51(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n                    ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showSupplementalAPanel), {hash:{},inverse:self.noop,fn:self.program(52, program52, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                ";
  return buffer;
  }
function program52(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n                        ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showSupplementalBPanel), {hash:{},inverse:self.noop,fn:self.program(53, program53, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                    ";
  return buffer;
  }
function program53(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n                            <div class=\"feedback-box\" id=\"feedback-no-panels\">\n                                <div class=\"feedback-box-header\">\n                                    <span class=\"fa fa-fw fa-exclamation-triangle\" aria-hidden=\"true\"></span>\n                                    <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "no_panels_title", options) : helperMissing.call(depth0, "translate", "no_panels_title", options)))
    + "</h3>\n                                </div>\n                                <p>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "no_panels_explanation", options) : helperMissing.call(depth0, "translate", "no_panels_explanation", options)))
    + "</p>\n                                <div class=\"clear\"></div>\n                            </div>\n                        ";
  return buffer;
  }

  buffer += "<h2 id=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title", options) : helperMissing.call(depth0, "translate", "title", options)))
    + "</h2>\n<div id=\"feedback-overview\" class=\"instruction\">\n    "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "overview", options) : helperMissing.call(depth0, "translate", "overview", options)))
    + "\n</div>\n<div id=\"feedback-help-wrapper\" class=\"instruction\">\n	<span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{
    'helpPagesUrl': ((depth0 && depth0.helpPagesUrl)),
    'helpPagesTarget': ((depth0 && depth0.helpPagesTarget))
  },data:data},helper ? helper.call(depth0, "help_home", options) : helperMissing.call(depth0, "translate", "help_home", options)))
    + "</span>\n</div>\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showTechnicalPanel), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showHelpPanel), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showSuggestionsPanel), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<div id=\"feedback-links\">\n\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showContentPanel), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showHelpPanel), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showTechnicalPanel), {hash:{},inverse:self.noop,fn:self.program(20, program20, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showSuggestionsPanel), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showSupplementalAPanel), {hash:{},inverse:self.noop,fn:self.program(34, program34, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showSupplementalBPanel), {hash:{},inverse:self.noop,fn:self.program(42, program42, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n    ";
  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showContentPanel), {hash:{},inverse:self.noop,fn:self.program(48, program48, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n    <div id=\"feedback-supplementary-info\">";
  if (helper = helpers.supplementaryInfo) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.supplementaryInfo); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</div>\n    <div class=\"clear\"></div>\n</div>\n";
  return buffer;
  });
  var templates = Handlebars.templates = Handlebars.templates || {};
  templates['home'] = template;
  var partials = Handlebars.partials = Handlebars.partials || {};
  partials['home'] = template;


// Source: /Users/sandipniyogi/Documents/jiri/sakai/sakai/feedback/src/webapp/WEB-INF/templates/toolbar.handlebars

  var template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<li id=\"feedback-suggest-feature-item\" role=\"menuitem\"><span><a title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_feature_tooltip", options) : helperMissing.call(depth0, "translate", "suggest_feature_tooltip", options)))
    + "\" href=\"";
  if (helper = helpers.featureSuggestionUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.featureSuggestionUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_feature_label", options) : helperMissing.call(depth0, "translate", "suggest_feature_label", options)))
    + "</a></span></li>";
  return buffer;
  });
  var templates = Handlebars.templates = Handlebars.templates || {};
  templates['toolbar'] = template;
  var partials = Handlebars.partials = Handlebars.partials || {};
  partials['toolbar'] = template;



})();